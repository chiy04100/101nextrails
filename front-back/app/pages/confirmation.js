import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Link from 'next/link'
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

const ITEMS_PER_PAGE = 10;

const Confirmation = ({initialData}) => {
  const [data, setData] = useState(initialData);

  const [currentPage, setCurrentPage] = useState(1); // 現在表示しているページ番号
  const totalPages = Math.ceil(initialData.length / ITEMS_PER_PAGE); // 総ページ数
  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE; // 現在表示するページの先頭アイテムのインデックス
  const endIndex = Math.min(startIndex + ITEMS_PER_PAGE, initialData.length); // 現在表示するページの末尾アイテムのインデックス

  const currentPageData = initialData.slice(startIndex, endIndex);

  const pagination = [];
  for (let i = 1; i <= totalPages; i++) {
    pagination.push(
      <button key={i} onClick={() => handlePageChange(i)}>
        {i}
      </button>
    );
  }

  const items = [];
  for (let i = 0; i < currentPageData.length; i++) {
    const item = currentPageData[i];
    items.push(
      <div key={item.id}>
        <p>{item.id}</p>
        <h4>{item.familyname}</h4>
        <h4>{item.name}</h4>
        <h4>{item.postalcode}</h4>
        <h4>{item.address}</h4>
        <h4>{item.Phonenumber}</h4>

        <Link href={`/history/${item.id}`} >
            <button>注文履歴</button>
        </Link>
        <button onClick={() => handleDelete(item.id)}>削除</button>
      </div>
    );
  }

  const handlePageChange = (pageNumber) => {
    setCurrentPage(pageNumber);
  };

  const handleDelete = async (id) => {
    try {
      // DELETEリクエストを送信
      const response = await axios.delete(`http://localhost:3000/users/${id}`);
      //リロードせずに表示
      setData((prevData) => prevData.filter((item) => item.id !== id));
      // レスポンスを処理する
      console.log(response.data);
    } catch (error) {
      // エラーを処理する
      console.error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.s}>
        <div className={styles.a}>
          <ul>
           <li>
            <Link href="/">
             <p>トップ</p>
            </Link>
           </li>
           <li>
            <Link href="/post">
             <p>登録</p>
            </Link>
           </li>
           <li>
            <Link href="/check">
             <p>管理</p>
            </Link>
           </li>
           <li>
            <Link href="/confirmation">
             <p>ユーザー</p>
            </Link>
           </li>
          </ul>
        </div>
        <div>
        <h1>ユーザー一覧</h1>
          {items}
          <div>
            {pagination}
          </div>
        </div>
      </div>
    </>
  )
}
export async function getStaticProps() {
  const response = await axios.get('http://api:3000/users');
  const initialData = response.data;
  return { props: { initialData } };
}

export default Confirmation;
